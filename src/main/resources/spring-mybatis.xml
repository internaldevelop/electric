<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <!--<bean id="propertyUtil" class="com.iie.electric.util.PropertyUtil"/>-->
    <!--&lt;!&ndash;使用C3P0数据源，MySQL数据库&ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
    <!--<property name="driverClass" value="#{propertyUtil.getDriverClassName()}"/>-->
    <!--<property name="jdbcUrl" value="#{propertyUtil.getUrl()}"/>-->
    <!--<property name="user" value="#{propertyUtil.getUserName()}"/>-->
    <!--<property name="password" value="#{propertyUtil.getPwd()}"/>-->
    <!--<property name="maxIdleTime" value="#{propertyUtil.getMaxIdleTime()}"/>-->
    <!--</bean>-->

    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.iie.electric.module"/>
    <context:component-scan base-package="com.iie.electric.dao"/>
    <context:component-scan base-package="com.iie.electric.service"/>

    <!--&lt;!&ndash;配置任务线性池&ndash;&gt;-->
    <!--<task:executor id="executor" pool-size="5" />-->
    <!--<task:scheduler id="scheduler" pool-size="10" />-->
    <!--<task:annotation-driven executor="executor" scheduler="scheduler" />-->
    <!--<task:scheduled-tasks>-->
    <!--<task:scheduled ref="TaskSchedueModule" method="taskScheduer" cron="0 0/5 * * * ?"/>-->
    <!--</task:scheduled-tasks>-->

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <property name="numTestsPerEvictionRun" value="50"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
    </bean>


    <!-- 配置Session工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- 自动扫描所有的Mapper接口与文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.iie.electric.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- 定义个通知，指定事务管理器 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="count*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="has*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="check*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- 配置一个切入点 -->
        <aop:pointcut id="serviceMethods" expression="execution(* com.iie.electric.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

</beans>