var Pop = require( '../../../public/js-dev/pop' );
var pop = new Pop( $( '#popModal' ) );

//表单验证
( function() {
	var $form = $( '#emailConfig' );

	$.extend($.validator.messages, {
		required: "这是必填字段",
		equalTo: "两次输入密码不匹配",
		email: "发件箱格式不正确"
	});
	
	$form.validate( {
	    rules: {
	    	'sendAddr': {
	    		required: true,
	    		email: true
	    	},
	    	'sendPS': {
	    		required: true,
	    	},
	    	'confirmPS': {
	    		required: true,
	    		equalTo: "#sendPS",
	 		},
	 		'emailSubject': {
	 			required: true
	 		}
	 	}
	} );
	
	$( '.submit' ).click( function() {
		var $loading = $( '.loading' ),
			$this = $( this );
		
		if( $form.valid() ) {
			$loading.show();
			$this.attr( 'disabled', 'disabled' );

			$.ajax( {
				type: 'POST',
				url:'changeEmail',
				data: $form.serialize(),
				dataType: 'JSON'
			} ).done( function( json ) {
				if( json.bizNo > 0 ) {
					pop.success( '修改成功!' );
				} else {
					pop.error( '修改失败!' );
				}
			} ).fail( function() {
				pop.error( '请求发生错误!' );
			} ).always( function() {
				$loading.hide();
				$this.removeAttr( 'disabled' );
			} )
		}
	} )
} )();

/*************************添加收件人*************************/
var addReceive = ( function() {
	var $addTarget = $( '.receive' ),
		$name = $( 'input[name="receiverName"]' ),
		$addr = $( 'input[name="receiverAddr"]' ),
		validArray = [ $name, $addr ];

	//序列化收件人信息
	function serailze() {
		return 'receiverName=' + $name.val() + '&receiverAddr=' + $addr.val();
	}

	//添加一个收件人
	function addRec( name, addr ) {
		var htmlStr = '<li class="item" title="' + addr + '">' +
						'<span class="name">' + name + '</span>' +
						'<i class="fa fa-times delete"></i>' +
					  '</li>';

		$addTarget.append( htmlStr );
	}

	//添加收件人请求
	function addRecRequest( successCb ) {
		$.ajax( {
			type: 'POST',
			url: 'addReceiver',
			data: serailze(),
			dataType: 'JSON'
		} ).then( function( json ) {
			//没有处理添加失败的情况
			if( json.bizNo > 0 ) {
				addRec( $name.val(), $addr.val() );
				resetAddInput( validArray );
			}
		} )
	}

	//对姓名和地址进行验证
	function valid() {
		var ret = true;
		validArray.forEach( function( dom ) {
			if( !validOne( dom ) ) {
				ret = false;
			}
		} )
		return ret;
	}

	//对每个元素进行验证
	function validOne( $target ) {
		$target.removeClass( 'error' );
		if( !testRules( $target ) ) {
			//加入延时，再次点击时才能有效果，否则删除error后马上添加没有效果
			setTimeout( function() {
				$target.addClass( 'error' );
			}, 50 )
			return false;
		}
		return true;
	}

	//验证表单
	function testRules( $target ) {
		var rules = $target.data( 'rule' ).split( /\s+/ ),
			val = $target.val(),
			i;

		for( i = 0; i < rules.length; i++ ) {
			if( !testRule( val, rules[ i ] ) ) {
				return false;
			}
		}
		return true;
	}

	//验证规则
	function testRule( value, rule ) {
		var ret = true;
		value = value.trim();

		switch( rule ){
			case 'required':
				if( value == '' ) {
					ret = false;
				}
				break;
			case 'email':
				if( !/^.+@[^.]+\..+$/.test( value ) ) {
					ret = false;
				}
				break;
			default:
				break;
		}
		return ret;
	}

	//重置收件人姓名和地址
	function resetAddInput( array ) {
		var rVal = /input/i;

		array.forEach( function( item ) {
			if( rVal.test( item[0]['nodeName'] ) ) {
				item.val( '' );
			} else {
				item.text( '' );
			}
		} )
	}
	
	return {
		init: function() {
			$( '.add-receive' ).click( function() {
				if( valid() ) {
					addRecRequest( addRec );
					 // addRec( $name.val(), $addr.val() );
					$( '.no-receiver' ).hide();
				}
				
			} )
		}
	}

} )();
addReceive.init();
/****************************************************************/

/******************************删除收件人**********************************/
$( '.receive' ).delegate( '.delete', 'click', function() {
	var $this = $( this ),
		$item = $this.parent(),
		name = $item.find( '.name' ).text(),
		addr = $item.attr( 'title' );

	$item.remove();
	if( $( '.receive' ).find( '.item' ).length == 0 ) {
		$( '.no-receiver' ).show();
	}

	$.ajax( {
		type: 'POST',
		url: 'deleteReceiver',
		data: 'receiverName=' + name + '&receiverAddr=' + addr,
		dataType: 'JSON'
	} ).then( function( json ) {
		if( json.bizNo > 0 ) {
			$item.remove();
			if( $( '.receive' ).find( '.item' ).length == 0 ) {
				$( '.no-receiver' ).show();
			}
		}
	} )
} )






